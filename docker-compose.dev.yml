services:
  database:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_DB: vacation_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 3s
      retries: 5

  vacations:
    image: meggie87/vacations:v6
    build:
      context: .
      dockerfile: vacations/vacations_backend/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      database:
        condition: service_healthy
    environment:
      DJANGO_SETTINGS_MODULE: vacations_backend.settings
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: vacation_db
      DB_USER: postgres
      DB_PASSWORD: 123456
    restart: always

  backend:
    image: meggie87/stats-backend:v6
    build:
      context: .
      dockerfile: stats_backend/Dockerfile
    command: python manage.py runserver 0.0.0.0:9000
    volumes:
      - .:/usr/src/app
    ports:
      - "9000:9000"
    depends_on:
      database:
        condition: service_healthy
    environment:
      DJANGO_SETTINGS_MODULE: stats_backend.settings
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: vacation_db
      DB_USER: postgres
      DB_PASSWORD: 123456
      IN_DOCKER: "1"
    restart: always

  frontend:
    image: meggie87/stats-frontend:v6
    build:
      context: ./statistics-app
      dockerfile: Dockerfile
    command: npm start
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: always

volumes:
  pg_data:
